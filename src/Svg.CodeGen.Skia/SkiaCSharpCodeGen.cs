/*
 * Svg.Skia SVG rendering library.
 * Copyright (C) 2023  Wiesław Šoltés
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
#nullable enable
using System.Text;
using ShimSkiaSharp;

namespace Svg.CodeGen.Skia;

public static class SkiaCSharpCodeGen
{
    public static string Generate(SKPicture picture, string namespaceName, string className)
    {
        var counter = new SkiaCSharpCodeGenCounter();

        var sb = new StringBuilder();

        sb.AppendLine("// <auto-generated />");
        sb.AppendLine("// This file was automatically generated by Svg.Skia (https://github.com/wieslawsoltes/Svg.Skia).");
        sb.AppendLine("// Svg.Skia is licensed under the GNU Affero General Public License");
        sb.AppendLine("// Do not make changes to this file unless you know what you are doing--modify");
        sb.AppendLine($"");
        sb.AppendLine($"namespace {namespaceName}");
        sb.AppendLine($"{{");
        sb.AppendLine($"    using System;");
        sb.AppendLine($"    using SkiaSharp;");
        sb.AppendLine($"");
        sb.AppendLine($"    public static class {className}");
        sb.AppendLine($"    {{");
        sb.AppendLine($"        public static SKPicture Picture {{ get; }}");
        sb.AppendLine($"");
        sb.AppendLine($"        static {className}()");
        sb.AppendLine($"        {{");
        sb.AppendLine($"            Picture = Record();");
        sb.AppendLine($"        }}");
        sb.AppendLine($"");
        sb.AppendLine($"        private static SKPicture Record()");
        sb.AppendLine($"        {{");

        var indent = "            ";

        var counterPicture = ++counter.Picture;
        picture.ToSKPicture(counter, sb, indent);

        sb.AppendLine($"{indent}return {counter.PictureVarName}{counterPicture};");

        sb.AppendLine($"        }}");
        sb.AppendLine($"");
        sb.AppendLine($"        public static void Draw(SKCanvas {counter.CanvasVarName})");
        sb.AppendLine($"        {{");
        sb.AppendLine($"            {counter.CanvasVarName}.DrawPicture(Picture);");
        sb.AppendLine($"        }}");
        sb.AppendLine($"    }}");
        sb.AppendLine($"}}");

        var code = sb.ToString();
        return code;
    }
}
